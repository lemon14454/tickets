services:
  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
  redis:
    image: redis:7.4.2-alpine
  mq:
    image: rabbitmq:4.0.4-alpine
  api:
    build:
      context: ./backend/.
      dockerfile: Dockerfile
    environment:
      - DB_SOURCE=${DB_SOURCE}
      - BROKER_ADDRESS=${BROKER_ADDRESS}
      - REDIS_ADDRESS=${REDIS_ADDRESS}
    ports:
      - 8080:8080
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
      redis:
        condition: service_started
      mq:
        condition: service_started
    command: [ "/app/main" ]
  consumer:
    build:
      context: ./consumer/.
      dockerfile: Dockerfile
    environment:
      - DB_SOURCE=${DB_SOURCE}
      - BROKER_ADDRESS=${BROKER_ADDRESS}
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
      mq:
        condition: service_started
    command: [ "/app/main" ]
  nginx:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 8081:8081
    depends_on:
      api:
        condition: service_started

